version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-vtuber-postgres
    environment:
      POSTGRES_DB: ai_vtuber
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-vtuber-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-vtuber-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-vtuber-network

  # Go Backend
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: ai-vtuber-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=ai_vtuber
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../backend/configs:/app/configs
    networks:
      - ai-vtuber-network

  # Vue3 Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: ai-vtuber-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ai-vtuber-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-vtuber-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ai-vtuber-network

volumes:
  postgres_data:
  redis_data:

networks:
  ai-vtuber-network:
    driver: bridge